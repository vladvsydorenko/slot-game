(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[601],{7600:function(e,n,t){Promise.resolve().then(t.bind(t,2812))},2812:function(e,n,t){"use strict";let r,o;t.r(n),t.d(n,{default:function(){return d}});var i=t(7437);t(5768);var l=t(8439),s=t(2265);t(5378),t(4036);var a=t(1396),u=t.n(a);function c(e){let{children:n,title:t}=e;return(0,i.jsxs)("div",{className:"header-container",children:[(0,i.jsxs)("div",{className:"header-title flex flex-row justify-center items-center",children:[(0,i.jsx)("div",{className:"header-back-link p-2",children:(0,i.jsx)(u(),{href:"../",children:"<--"})}),t?(0,i.jsx)("h2",{className:"header-label grow pl-4 text-lg",children:t}):null]}),(0,i.jsx)("div",{className:"header-content",children:n})]})}let h=!1;function m(){}function d(){var e=(0,s.useRef)();return(0,s.useEffect)(()=>{var n;n=e.current,h&&n==r||(h=!0,r=n,n.innerHTML="",o=new l.MxU({background:"#000",resizeTo:n,antialias:!0}),n.append(o.view),o.ticker.add(m),function(){let e={width:o.renderer.width,height:o.renderer.height},n=Math.min(e.width,e.height),t=n/3,r=e.width-n,i=e.height-n,s=r/2,a=i/2,u=[l.xEZ.from("/slot-game/images/slot-1.png"),l.xEZ.from("/slot-game/images/slot-2.png"),l.xEZ.from("/slot-game/images/slot-3.png"),l.xEZ.from("/slot-game/images/slot-4.png"),l.xEZ.from("/slot-game/images/slot-5.png"),l.xEZ.from("/slot-game/images/slot-6.png"),l.xEZ.from("/slot-game/images/slot-7.png"),l.xEZ.from("/slot-game/images/slot-8.png"),l.xEZ.from("/slot-game/images/slot-9.png")],c=new l.wn$("\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord; // Add this line to declare texture coordinates\n\n    uniform mat3 projectionMatrix;\n    varying vec2 vTextureCoord; // Add this line to pass texture coordinates to the fragment shader\n\n    void main() {\n        gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n        vTextureCoord = aTextureCoord; // Pass the texture coordinates to the fragment shader\n    }\n","\nprecision mediump float;\n\nvarying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform vec2 uResolution;\nuniform vec4 uOutlineColor;\nuniform float uOutlineThickness;\nuniform float uOutlineAlphacut;\n\nvoid main() {\n    vec2 onePixel = vec2(1.0, 1.0) / uResolution;\n    vec4 centerColor = texture2D(uSampler, vTextureCoord);\n\n    // Check if the center pixel is fully transparent (alpha == 0)\n    bool isTransparent = centerColor.a < uOutlineAlphacut;\n\n    // Check if the pixel's neighbors are different from the center pixel\n    bool isOutline =\n        texture2D(uSampler, vTextureCoord + vec2(0.0, uOutlineThickness) * onePixel) != centerColor ||\n        texture2D(uSampler, vTextureCoord + vec2(uOutlineThickness, 0.0) * onePixel) != centerColor ||\n        texture2D(uSampler, vTextureCoord + vec2(0.0, -uOutlineThickness) * onePixel) != centerColor ||\n        texture2D(uSampler, vTextureCoord + vec2(-uOutlineThickness, 0.0) * onePixel) != centerColor;\n\n    // If the center pixel is transparent and it's an outline pixel, use the outline color; otherwise, use the original color\n    gl_FragColor = isTransparent && isOutline ? uOutlineColor : centerColor;\n}\n");c.uniforms.uResolution=new Float32Array([o.renderer.width,o.renderer.height]),c.uniforms.uOutlineColor=new Float32Array([1,1,0,.1]),c.uniforms.uOutlineThickness=1,c.uniforms.uOutlineAlphacut=.9,c.uniforms.uSmoothness=.001;let h=new l.W20;h.filters=[c];for(let e=0;e<3;e++){let n=s+e*t;for(let r=0;r<3;r++){let o=a+r*t,i=new l.jyi(u[3*e+r]);i.anchor.set(0),i.x=n,i.y=o,i.width=t,i.height=t,h.addChild(i)}o.stage.addChild(h)}}())}),(0,i.jsxs)("main",{className:"flex min-h-screen flex-col items-center items-stretch",children:[(0,i.jsx)(c,{title:"Slot Game grid (with custom outline shader)"}),(0,i.jsx)("div",{ref:e,className:"game-container flex flex-grow",children:"Game will be here"})]})}},5768:function(){},4036:function(){}},function(e){e.O(0,[176,756,971,596,744],function(){return e(e.s=7600)}),_N_E=e.O()}]);